trigger:
  branches:
    exclude:
      - docs
      - gh-pages

jobs:
  - job: Build
    pool:
      vmImage: "windows-latest"

    # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml#multi-job-configuration
    strategy:
      maxParallel: 3
      matrix:
        release_x64:
          BuildPlatform: x64
          BuildConfiguration: Release
          cmake_arch: x64
          vcpkg_target_triplet: x64-windows
        debug_x64:
          BuildPlatform: x64
          BuildConfiguration: Debug
          cmake_arch: x64
          vcpkg_target_triplet: x64-windows
        release_x86:
          BuildPlatform: x86
          BuildConfiguration: Release
          cmake_arch: Win32
          vcpkg_target_triplet: x86-windows
        debug_x86:
          BuildPlatform: x86
          BuildConfiguration: Debug
          cmake_arch: Win32
          vcpkg_target_triplet: x86-windows

    variables:
      install_dir: "c:/install"

    steps:
      - task: Cache@2
        inputs:
          key: 'vcpkg-$(BuildPlatform) | "$(Agent.OS)"'
          path: "c:/vcpkg/installed"

      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: |
            Write-Output $(install_dir) ${env:vcpkg_target_triplet}
            vcpkg install --triplet $env:vcpkg_target_triplet ms-gsl spdlog catch2 wil
            vcpkg list
        env:
          platform: $(BuildPlatform)

      - task: CMake@1
        inputs:
          cmakeArgs: .. -A $(cmake_arch) -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="$(BuildPlatform)-windows" -DCMAKE_INSTALL_PREFIX=$(install_dir) -DCMAKE_BUILD_TYPE=$(BuildConfiguration) -DBUILD_TESTING=True
          workingDirectory: "build" # will create a directory

      - task: MSBuild@1
        inputs:
          solution: build/media.sln
          platform: "$(cmake_arch)" # x64|Win32
          configuration: "$(BuildConfiguration)" # Debug|Release
          clean: true
          logFileVerbosity: detailed

        # condition: succeededOrFailed()
      - task: CMake@1
        inputs:
          cmakeArgs: --build . --config $(BuildConfiguration) --target install
          workingDirectory: "build"

      # copy DLL in VcPkg (for Debug build)
      - task: CopyFiles@2
        inputs:
          sourceFolder: "C:/vcpkg/installed/$(vcpkg_target_triplet)/debug/bin"
          contents: "*.dll"
          targetFolder: "$(install_dir)/tools"
          overWrite: true
        condition: in(variables['BuildConfiguration'], 'Debug')

      # copy DLL in VcPkg (for Release build)
      - task: CopyFiles@2
        inputs:
          sourceFolder: "C:/vcpkg/installed/$(vcpkg_target_triplet)/bin"
          contents: "*.dll"
          targetFolder: "$(install_dir)/tools"
          overWrite: true
        condition: in(variables['BuildConfiguration'], 'Release')

      - task: PowerShell@2
        inputs:
          targetType: "inline"
          script: ./media_test_suite.exe --success
          workingDirectory: "$(install_dir)/tools"
        condition: succeeded()

  - job: Analysis
    dependsOn: Build
    pool:
      vmImage: "windows-latest"

    steps:
      - powershell: systeminfo
